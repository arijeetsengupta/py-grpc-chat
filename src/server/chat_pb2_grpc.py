# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from src.server import chat_pb2 as src_dot_server_dot_chat__pb2


class ChatStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.connect = channel.unary_unary(
                '/Chat/connect',
                request_serializer=src_dot_server_dot_chat__pb2.ChatUser.SerializeToString,
                response_deserializer=src_dot_server_dot_chat__pb2.ChatUserConnected.FromString,
                )
        self.disconnect = channel.unary_unary(
                '/Chat/disconnect',
                request_serializer=src_dot_server_dot_chat__pb2.ChatUserConnected.SerializeToString,
                response_deserializer=src_dot_server_dot_chat__pb2.ChatUserConnected.FromString,
                )
        self.sendMessage = channel.unary_unary(
                '/Chat/sendMessage',
                request_serializer=src_dot_server_dot_chat__pb2.ChatMessage.SerializeToString,
                response_deserializer=src_dot_server_dot_chat__pb2.ServerResponse.FromString,
                )
        self.subscribeMessages = channel.unary_stream(
                '/Chat/subscribeMessages',
                request_serializer=src_dot_server_dot_chat__pb2.ChatUserConnected.SerializeToString,
                response_deserializer=src_dot_server_dot_chat__pb2.ChatMessage.FromString,
                )
        self.subscribeActiveUsers = channel.unary_stream(
                '/Chat/subscribeActiveUsers',
                request_serializer=src_dot_server_dot_chat__pb2.ChatUserConnected.SerializeToString,
                response_deserializer=src_dot_server_dot_chat__pb2.ChatActiveUser.FromString,
                )
        self.register = channel.unary_unary(
                '/Chat/register',
                request_serializer=src_dot_server_dot_chat__pb2.Creds.SerializeToString,
                response_deserializer=src_dot_server_dot_chat__pb2.ServerResponse.FromString,
                )
        self.login = channel.unary_unary(
                '/Chat/login',
                request_serializer=src_dot_server_dot_chat__pb2.Creds.SerializeToString,
                response_deserializer=src_dot_server_dot_chat__pb2.ServerResponse.FromString,
                )
        self.getAllUsers = channel.unary_unary(
                '/Chat/getAllUsers',
                request_serializer=src_dot_server_dot_chat__pb2.Empty.SerializeToString,
                response_deserializer=src_dot_server_dot_chat__pb2.ServerResponse.FromString,
                )
        self.createGroup = channel.unary_unary(
                '/Chat/createGroup',
                request_serializer=src_dot_server_dot_chat__pb2.CreateGroupRequest.SerializeToString,
                response_deserializer=src_dot_server_dot_chat__pb2.ServerResponse.FromString,
                )
        self.displayMemberGroups = channel.unary_unary(
                '/Chat/displayMemberGroups',
                request_serializer=src_dot_server_dot_chat__pb2.ChatUser.SerializeToString,
                response_deserializer=src_dot_server_dot_chat__pb2.ServerResponse.FromString,
                )


class ChatServicer(object):
    """Missing associated documentation comment in .proto file."""

    def connect(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def disconnect(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def sendMessage(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def subscribeMessages(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def subscribeActiveUsers(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def register(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def login(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def getAllUsers(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def createGroup(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def displayMemberGroups(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ChatServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'connect': grpc.unary_unary_rpc_method_handler(
                    servicer.connect,
                    request_deserializer=src_dot_server_dot_chat__pb2.ChatUser.FromString,
                    response_serializer=src_dot_server_dot_chat__pb2.ChatUserConnected.SerializeToString,
            ),
            'disconnect': grpc.unary_unary_rpc_method_handler(
                    servicer.disconnect,
                    request_deserializer=src_dot_server_dot_chat__pb2.ChatUserConnected.FromString,
                    response_serializer=src_dot_server_dot_chat__pb2.ChatUserConnected.SerializeToString,
            ),
            'sendMessage': grpc.unary_unary_rpc_method_handler(
                    servicer.sendMessage,
                    request_deserializer=src_dot_server_dot_chat__pb2.ChatMessage.FromString,
                    response_serializer=src_dot_server_dot_chat__pb2.ServerResponse.SerializeToString,
            ),
            'subscribeMessages': grpc.unary_stream_rpc_method_handler(
                    servicer.subscribeMessages,
                    request_deserializer=src_dot_server_dot_chat__pb2.ChatUserConnected.FromString,
                    response_serializer=src_dot_server_dot_chat__pb2.ChatMessage.SerializeToString,
            ),
            'subscribeActiveUsers': grpc.unary_stream_rpc_method_handler(
                    servicer.subscribeActiveUsers,
                    request_deserializer=src_dot_server_dot_chat__pb2.ChatUserConnected.FromString,
                    response_serializer=src_dot_server_dot_chat__pb2.ChatActiveUser.SerializeToString,
            ),
            'register': grpc.unary_unary_rpc_method_handler(
                    servicer.register,
                    request_deserializer=src_dot_server_dot_chat__pb2.Creds.FromString,
                    response_serializer=src_dot_server_dot_chat__pb2.ServerResponse.SerializeToString,
            ),
            'login': grpc.unary_unary_rpc_method_handler(
                    servicer.login,
                    request_deserializer=src_dot_server_dot_chat__pb2.Creds.FromString,
                    response_serializer=src_dot_server_dot_chat__pb2.ServerResponse.SerializeToString,
            ),
            'getAllUsers': grpc.unary_unary_rpc_method_handler(
                    servicer.getAllUsers,
                    request_deserializer=src_dot_server_dot_chat__pb2.Empty.FromString,
                    response_serializer=src_dot_server_dot_chat__pb2.ServerResponse.SerializeToString,
            ),
            'createGroup': grpc.unary_unary_rpc_method_handler(
                    servicer.createGroup,
                    request_deserializer=src_dot_server_dot_chat__pb2.CreateGroupRequest.FromString,
                    response_serializer=src_dot_server_dot_chat__pb2.ServerResponse.SerializeToString,
            ),
            'displayMemberGroups': grpc.unary_unary_rpc_method_handler(
                    servicer.displayMemberGroups,
                    request_deserializer=src_dot_server_dot_chat__pb2.ChatUser.FromString,
                    response_serializer=src_dot_server_dot_chat__pb2.ServerResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'Chat', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Chat(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def connect(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Chat/connect',
            src_dot_server_dot_chat__pb2.ChatUser.SerializeToString,
            src_dot_server_dot_chat__pb2.ChatUserConnected.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def disconnect(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Chat/disconnect',
            src_dot_server_dot_chat__pb2.ChatUserConnected.SerializeToString,
            src_dot_server_dot_chat__pb2.ChatUserConnected.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def sendMessage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Chat/sendMessage',
            src_dot_server_dot_chat__pb2.ChatMessage.SerializeToString,
            src_dot_server_dot_chat__pb2.ServerResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def subscribeMessages(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/Chat/subscribeMessages',
            src_dot_server_dot_chat__pb2.ChatUserConnected.SerializeToString,
            src_dot_server_dot_chat__pb2.ChatMessage.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def subscribeActiveUsers(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/Chat/subscribeActiveUsers',
            src_dot_server_dot_chat__pb2.ChatUserConnected.SerializeToString,
            src_dot_server_dot_chat__pb2.ChatActiveUser.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def register(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Chat/register',
            src_dot_server_dot_chat__pb2.Creds.SerializeToString,
            src_dot_server_dot_chat__pb2.ServerResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def login(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Chat/login',
            src_dot_server_dot_chat__pb2.Creds.SerializeToString,
            src_dot_server_dot_chat__pb2.ServerResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def getAllUsers(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Chat/getAllUsers',
            src_dot_server_dot_chat__pb2.Empty.SerializeToString,
            src_dot_server_dot_chat__pb2.ServerResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def createGroup(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Chat/createGroup',
            src_dot_server_dot_chat__pb2.CreateGroupRequest.SerializeToString,
            src_dot_server_dot_chat__pb2.ServerResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def displayMemberGroups(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Chat/displayMemberGroups',
            src_dot_server_dot_chat__pb2.ChatUser.SerializeToString,
            src_dot_server_dot_chat__pb2.ServerResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
